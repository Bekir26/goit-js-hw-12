{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport axios from 'axios';\n{/* <li>\n          <a href=\"./img/deneme.png\">\n            <img src=\"./img/deneme.png\" alt=\"Image 1\" />\n            <div class=\"general-likes-container\">\n              <div class=\"likes-container\">\n                <h3 class=\"likes-title\">Likes</h3>\n                <div class=\"likes\">1813</div>\n              </div>\n              <div class=\"likes-container\">\n                <h3 class=\"likes-title\">Views</h3>\n                <div class=\"likes\">900290</div>\n              </div>\n              <div class=\"likes-container\">\n                <h3 class=\"likes-title\">Comments</h3>\n                <div class=\"likes\">229</div>\n              </div>\n              <div class=\"likes-container\">\n                <h3 class=\"likes-title\">Downloads</h3>\n                <div class=\"likes\">610937</div>\n              </div>\n            </div>\n          </a>\n        </li> */}\n\nconst loadingDOM = document.querySelector('.loading');\nconst search_btn = document.querySelector('.searchBtn');\nconst galleryDOM = document.querySelector('.gallery');\nconst base_url = \"https://pixabay.com/api/?\"\nconst searchInput = document.querySelector('.searchInput');\nconst loadmoreDOM = document.querySelector('.load-btn');\nlet cardHeight;\nconst api_key = \"46048347-9d88aa79f4238f227ee13ac9b\"\n// const messageContainerDOM = document.querySelector('.messageContainer'); \nlet lightbox;\nlet last_search_text = '';\nlet page = 1;\nfunction refresh(){\n  galleryDOM.innerHTML=\"\";\n}\nfunction showMessage(message){\n  iziToast.show({\n    theme: 'custom',\n    icon: 'fas fa-exclamation-circle',\n    message: message,\n    position: 'topRight',\n    progressBarColor: '#B51B1B',\n    onOpening: function(instance, toast){\n        console.info('Modal is open');\n    },\n    onClosing: function(instance, toast, closedBy){\n        console.info('closedBy: ' + closedBy); \n        instance.message='';\n    }\n});\n}\nasync function getPhoto(searchText){\n  if(page == 1){\n    refresh();\n  }\n  \n  const full_url = `${base_url}key=${api_key}&q=${searchText}&image_type=photo&orientation=horizontal&safesearch=true&per_page=40&page=${page}`;\n  \n  try {\n    loadingDOM.style.display = \"block\";\n    const response = await axios(full_url);\n   \n     if (!(response.status >= 200 && response.status < 300)) {\n      throw new Error(`Response status: ${response.status}`);\n    }\n    loadingDOM.style.display = \"none\";\n    if(lightbox){\n      lightbox.close();\n    }\n    const images = response.data;\n    if(images?.hits.length > 0){\n      searchInput.value = \"\";\n      const fragment = document.createDocumentFragment();\n      images.hits.forEach((image) => {\n        const li = document.createElement('li');\n        li.innerHTML = `<a href=\"${image.largeImageURL}\">\n            <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\n            <div class=\"general-likes-container\">\n              <div class=\"likes-container\">\n                <h3 class=\"likes-title\">Likes</h3>\n                <div class=\"likes\">${image.likes}</div>\n              </div>\n              <div class=\"likes-container\">\n                <h3 class=\"likes-title\">Views</h3>\n                <div class=\"likes\">${image.views}</div>\n              </div>\n              <div class=\"likes-container\">\n                <h3 class=\"likes-title\">Comments</h3>\n                <div class=\"likes\">${image.comments}</div>\n              </div>\n              <div class=\"likes-container\">\n                <h3 class=\"likes-title\">Downloads</h3>\n                <div class=\"likes\">${image.downloads}</div>\n              </div>\n            </div>\n          </a>`\n        fragment.appendChild(li);\n      })\n      galleryDOM.appendChild(fragment);\n      page !== 1 ? window.scrollBy( window.scrollY ,cardHeight*2) : '';\n      if(!lightbox){\n        lightbox = new SimpleLightbox('.gallery a', {\n          captions: true,             \n          captionsData: 'alt',       \n          captionDelay: 250,         \n          showCounter: true,          \n          enableKeyboard: true,      \n          loop: true,                \n          nav: true,                 \n          close: true,                \n          animationSpeed: 250,\n      });\n      lightbox.on('close.simplelightbox', function () {\n        lightbox.close();\n       });\n      }\n      else{\n        lightbox.refresh();\n      }\n    \n    \n    }\n    else {\n      // messageContainerDOM.style.display = \"flex\";\n      // const closeBtn = document.querySelector('.close');\n      // closeBtn.addEventListener('click', () => {\n      //   messageContainerDOM.style.display = \"none\";\n      // })\n      loadmoreDOM.style.display = \"none\";\n      showMessage(\"Sorry, there are no images matching your search query. Please, try again!\");\n    }\n    \n    \n  } catch (error) {\n    loadingDOM.style.display = \"none\";\n    console.error(error.message);\n  }\n  \n}\n\nsearch_btn.addEventListener('click', _ => {\n  const searchText = searchInput.value.trim();\n  \n  if(searchText){\n    page = 1\n    last_search_text = searchText;\n    getPhoto(last_search_text);\n    loadmoreDOM.style.display =\"inline-block\";\n  }\n  else {\n    alert(\"Search input cant be empty\");\n  }\n})\n\n\nloadmoreDOM.addEventListener('click', _ => {\n  page++;\n  \n  cardHeight = document.querySelector('.gallery a').getBoundingClientRect().height;\n  console.log(cardHeight);\n  getPhoto(last_search_text);\n  \n})"],"names":["loadingDOM","search_btn","galleryDOM","base_url","searchInput","loadmoreDOM","cardHeight","api_key","lightbox","last_search_text","page","refresh","showMessage","message","iziToast","instance","toast","closedBy","getPhoto","searchText","full_url","response","axios","images","fragment","image","li","SimpleLightbox","error","_"],"mappings":"owBA6BA,MAAMA,EAAa,SAAS,cAAc,UAAU,EAC9CC,EAAa,SAAS,cAAc,YAAY,EAChDC,EAAa,SAAS,cAAc,UAAU,EAC9CC,EAAW,4BACXC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,WAAW,EACtD,IAAIC,EACJ,MAAMC,EAAU,qCAEhB,IAAIC,EACAC,EAAmB,GACnBC,EAAO,EACX,SAASC,GAAS,CAChBT,EAAW,UAAU,EACvB,CACA,SAASU,EAAYC,EAAQ,CAC3BC,EAAS,KAAK,CACZ,MAAO,SACP,KAAM,4BACN,QAASD,EACT,SAAU,WACV,iBAAkB,UAClB,UAAW,SAASE,EAAUC,EAAM,CAChC,QAAQ,KAAK,eAAe,CAC/B,EACD,UAAW,SAASD,EAAUC,EAAOC,EAAS,CAC1C,QAAQ,KAAK,aAAeA,CAAQ,EACpCF,EAAS,QAAQ,EACpB,CACL,CAAC,CACD,CACA,eAAeG,EAASC,EAAW,CAC9BT,GAAQ,GACTC,IAGF,MAAMS,EAAW,GAAGjB,CAAQ,OAAOI,CAAO,MAAMY,CAAU,6EAA6ET,CAAI,GAE3I,GAAI,CACFV,EAAW,MAAM,QAAU,QAC3B,MAAMqB,EAAW,MAAMC,EAAMF,CAAQ,EAEpC,GAAI,EAAEC,EAAS,QAAU,KAAOA,EAAS,OAAS,KACjD,MAAM,IAAI,MAAM,oBAAoBA,EAAS,MAAM,EAAE,EAEvDrB,EAAW,MAAM,QAAU,OACxBQ,GACDA,EAAS,MAAK,EAEhB,MAAMe,EAASF,EAAS,KACxB,IAAGE,GAAA,YAAAA,EAAQ,KAAK,QAAS,EAAE,CACzBnB,EAAY,MAAQ,GACpB,MAAMoB,EAAW,SAAS,yBAC1BD,EAAO,KAAK,QAASE,GAAU,CAC7B,MAAMC,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAY,YAAYD,EAAM,aAAa;AAAA,wBAC9BA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,qCAIzBA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,qCAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,qCAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,qCAIdA,EAAM,SAAS;AAAA;AAAA;AAAA,gBAI5CD,EAAS,YAAYE,CAAE,CAC/B,CAAO,EACDxB,EAAW,YAAYsB,CAAQ,EAC/Bd,IAAS,GAAI,OAAO,SAAU,OAAO,QAASJ,EAAW,CAAC,EACtDE,EAiBFA,EAAS,QAAO,GAhBhBA,EAAW,IAAImB,EAAe,aAAc,CAC1C,SAAU,GACV,aAAc,MACd,aAAc,IACd,YAAa,GACb,eAAgB,GAChB,KAAM,GACN,IAAK,GACL,MAAO,GACP,eAAgB,GAC1B,CAAO,EACDnB,EAAS,GAAG,uBAAwB,UAAY,CAC9CA,EAAS,MAAK,CACtB,CAAQ,EAOH,MAOCH,EAAY,MAAM,QAAU,OAC5BO,EAAY,2EAA2E,CAI1F,OAAQgB,EAAO,CACd5B,EAAW,MAAM,QAAU,OAC3B,QAAQ,MAAM4B,EAAM,OAAO,CAC5B,CAEH,CAEA3B,EAAW,iBAAiB,QAAS4B,GAAK,CACxC,MAAMV,EAAaf,EAAY,MAAM,KAAI,EAEtCe,GACDT,EAAO,EACPD,EAAmBU,EACnBD,EAAST,CAAgB,EACzBJ,EAAY,MAAM,QAAS,gBAG3B,MAAM,4BAA4B,CAEtC,CAAC,EAGDA,EAAY,iBAAiB,QAASwB,GAAK,CACzCnB,IAEAJ,EAAa,SAAS,cAAc,YAAY,EAAE,sBAAuB,EAAC,OAC1E,QAAQ,IAAIA,CAAU,EACtBY,EAAST,CAAgB,CAE3B,CAAC"}